





# // src/routes/product.routes.js
# const express = require('express');
# const router = express.Router();
# const productController = require('../controllers/product.controller');
# const auth = require('../middleware/auth');
# const { authorize } = require('../middleware/roleCheck');
# const upload = require('../middleware/upload');

# router.post('/', 
#   auth, 
#   authorize('farmer'), 
#   upload.array('images', 5), 
#   productController.createProduct
# );

# router.get('/', productController.getProducts);
# router.get('/farmer', auth, authorize('farmer'), productController.getFarmerProducts);
# router.patch('/:id', auth, authorize('farmer'), productController.updateProduct);

# module.exports = router;

# // src/routes/job.routes.js
# const express = require('express');
# const router = express.Router();
# const jobController = require('../controllers/job.controller');
# const auth = require('../middleware/auth');
# const { authorize } = require('../middleware/roleCheck');

# router.post('/', auth, authorize(['farmer', 'buyer']), jobController.createJob);
# router.get('/', jobController.getJobs);
# router.post('/:id/apply', auth, authorize('worker'), jobController.applyForJob);

# module.exports = router;

# // src/routes/order.routes.js
# const express = require('express');
# const router = express.Router();
# const orderController = require('../controllers/order.controller');
# const auth = require('../middleware/auth');
# const { authorize } = require('../middleware/roleCheck');

# router.post('/', auth, authorize('buyer'), orderController.createOrder);
# router.get('/buyer', auth, authorize('buyer'), orderController.getBuyerOrders);
# router.get('/farmer', auth, authorize('farmer'), orderController.getFarmerOrders);
# router.patch('/:id/status', auth, authorize('farmer'), orderController.updateOrderStatus);

# module.exports = router;

# // src/middleware/upload.js
# const multer = require('multer');
# const path = require('path');

# const storage = multer.diskStorage({
#   destination: function(req, file, cb) {
#     cb(null, 'uploads/products/');
#   },
#   filename: function(req, file, cb) {
#     cb(null, Date.now() + path.extname(file.originalname));
#   }
# });

# const upload = multer({
#   storage: storage,
#   limits: {
#     fileSize: 5 * 1024 * 1024 // 5MB limit
#   },
#   fileFilter: function(req, file, cb) {
#     const filetypes = /jpeg|jpg|png/;
#     const mimetype = filetypes.test(file.mimetype);
#     const extname = filetypes.test(path.extname(file.originalname).toLowerCase());

#     if (mimetype && extname) {
#       return cb(null, true);
#     }
#     cb(new Error('Only images are allowed'));
#   }
# });

# module.exports = upload;

# // src/middleware/roleCheck.js
# const authorize = (roles) => {
#   if (typeof roles === 'string') {
#     roles = [roles];
#   }
  
#   return (req, res, next) => {
#     if (!roles.includes(req.user.role)) {
#       return res.status(403).json({
#         error: 'Not authorized to access this resource'
#       });
#     }
#     next();
#   };
# };

# module.exports = { authorize };